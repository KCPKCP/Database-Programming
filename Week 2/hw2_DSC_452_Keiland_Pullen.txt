
REM Q1.
<< Question_1 >>

DECLARE
    department_id       DEPARTMENTS.DEPARTMENT_ID%TYPE := 111;
    department_name     DEPARTMENTS.DEPARTMENT_NAME%TYPE := 'Fortest';
    manager_ID          DEPARTMENTS.MANAGER_ID%TYPE := 100;
    location_ID         DEPARTMENTS.LOCATION_ID%TYPE := 1700;
    
BEGIN
    INSERT INTO DEPARTMENTS (department_id, department_name, manager_ID, location_ID)
    VALUES (department_id, department_name, manager_ID, location_ID);
    
    DBMS_OUTPUT.PUT_LINE ('New record inserted is =  Department ID: ' || department_id 
    || ' Department Name: '|| department_name || ' Manager ID: ' || manager_ID 
    || ' Location ID: ' || location_ID );
    
END Question_1;

[output]

New record inserted is =  Department ID: 111 Department Name: Fortest Manager ID: 100 Location ID: 1700



REM Q2.
<< Question_2 >>

DECLARE
    dept_id       DEPARTMENTS.DEPARTMENT_ID%TYPE ;
    dept_name     DEPARTMENTS.DEPARTMENT_NAME%TYPE ;
    mgr_ID          DEPARTMENTS.MANAGER_ID%TYPE ;
    loc_ID         DEPARTMENTS.LOCATION_ID%TYPE ;
    
BEGIN
    DELETE FROM Departments
    WHERE Department_ID = 111
    RETURNING department_name, manager_id
    INTO dept_name, mgr_ID;
    
    DBMS_OUTPUT.PUT_LINE(' ');
    DBMS_OUTPUT.PUT_LINE ('Record deleted with Department ID of 11 has a
    Department name = ' || dept_name || ' and a Manager ID = ' || mgr_ID );
    
END Question_2;

[output]

Record deleted with Department ID of 11 has a
    Department name = Fortest and a Manager ID = 100


REM Q3.
<< Question_3 >>

DECLARE
    dept_id       DEPARTMENTS.DEPARTMENT_ID%TYPE := 230;
    dept_name     DEPARTMENTS.DEPARTMENT_NAME%TYPE ;
    mgr_ID          DEPARTMENTS.MANAGER_ID%TYPE ;
    loc_ID         DEPARTMENTS.LOCATION_ID%TYPE ;
    
BEGIN
    UPDATE DEPARTMENTS
    SET manager_ID = 103
    WHERE department_ID = dept_id
    RETURNING department_name
    INTO dept_name;

    DBMS_OUTPUT.PUT_LINE(' ');
    DBMS_OUTPUT.PUT_LINE ('Updated  with Department ID: ' || dept_id || ' has a Department name = ' || dept_name || '.' );    

END Question_3;

[output]

Updated  with Department ID: 230 has a Department name = IT Helpdesk.



REM 4.
<< Question_4 >>

DECLARE
    dept_id       EMPLOYEES.DEPARTMENT_ID%TYPE := 80;
    dept_size     varchar2(20);
    
BEGIN
    SELECT COUNT(*) into dept_size
    FROM Employees
    WHERE Department_ID = dept_id ;   
    
    CASE
        WHEN dept_size > 30 THEN dept_size := 'LARGE';
        WHEN dept_size > 8 and dept_size < 29 THEN dept_size := 'MEDIUM';
        ELSE dept_size := 'SMALL';
    END CASE;
    
    DBMS_OUTPUT.PUT_LINE('Department size is ' || dept_size);
    
END Question_4;

[output]

Department size is LARGE



REM 5.
<< Question_5 >>

DECLARE
    emp_id          EMPLOYEES.EMPLOYEE_ID%TYPE := 206;
    emp_hire_date   EMPLOYEES.HIRE_DATE%TYPE;
    emp_salary      EMPLOYEES.SALARY%TYPE;
    bonus_salary    varchar2(10);
    emp_years_work  varchar2(25);
    bonus           varchar2(25);
    
BEGIN

    SELECT hire_date, salary into emp_hire_date, emp_salary 
    FROM EMPLOYEES
    WHERE EMPLOYEES.EMPLOYEE_ID = emp_id;
    
    emp_years_work := floor (months_between (sysdate, emp_hire_date)/12);
    
    DBMS_OUTPUT.PUT_LINE('Hire Date is  ' || emp_hire_date);
    DBMS_OUTPUT.PUT_LINE('Current Date is  ' || sysdate);
    DBMS_OUTPUT.PUT_LINE('Number of years worked  ' || emp_years_work);
    
    bonus := 1000 + emp_salary;
    
    CASE
        WHEN emp_years_work < 25 THEN bonus := bonus + 0;
        WHEN emp_years_work > 25 and emp_years_work < 27 THEN bonus := bonus + 500;
        ELSE bonus := bonus + 700;
    END CASE;
    
    CASE
        WHEN emp_salary > 10000 THEN bonus := bonus + 1100;
        WHEN emp_salary > 5000 and emp_salary < 10000 THEN bonus := bonus + 1000;
        ELSE bonus := bonus + 900;
    END CASE;
    
    SELECT TO_CHAR(bonus, '$99999.99') into bonus_salary FROM DUAL;
    DBMS_OUTPUT.PUT_LINE('Salary + Bonuses : ' || bonus_salary); 

END Question_5;

[output]

Hire Date is  07-JUN-94
Current Date is  12-APR-22
Number of years worked  27
Salary + Bonuses :  $11000.00



REM 6.
<< Question_6 >>

DECLARE
    j NUMBER := 15;
    x NUMBER := 15;

BEGIN  

    DBMS_OUTPUT.PUT_LINE('Basic Loop Output');
    LOOP
        DBMS_OUTPUT.PUT_LINE(x);
        x := x + 1;
        EXIT WHEN X > 17;
    END LOOP;
        
    DBMS_OUTPUT.PUT_LINE('For Loop Output');
    FOR i IN 15 .. 17 LOOP
        DBMS_OUTPUT.PUT_LINE(i);
    END LOOP;
    
    DBMS_OUTPUT.PUT_LINE('While Loop Output');
    WHILE j < 18 LOOP
        DBMS_OUTPUT.PUT_LINE(j);
        j := j + 1;
    END LOOP;
    
END Question_6;

[output]

Basic Loop Output
15
16
17
For Loop Output
15
16
17
While Loop Output
15
16
17


REM 7.
<< Question_7 >>

DECLARE
    x   NUMBER := 1;
    y   NUMBER := 1;
    
BEGIN
    WHILE x <= 9 LOOP
        DBMS_OUTPUT.PUT('|');
        
        WHILE y <= 9 LOOP
            DBMS_OUTPUT.PUT(' ' || x || y || '' );           
            y := y + 1;
 
        END LOOP;    
        
        DBMS_OUTPUT.PUT_LINE(' | ') ;
  
        x := x + 1;
        
        y := 1;
        
    END LOOP;
END Question_7;

[output]

| 11 12 13 14 15 16 17 18 19 | 
| 21 22 23 24 25 26 27 28 29 | 
| 31 32 33 34 35 36 37 38 39 | 
| 41 42 43 44 45 46 47 48 49 | 
| 51 52 53 54 55 56 57 58 59 | 
| 61 62 63 64 65 66 67 68 69 | 
| 71 72 73 74 75 76 77 78 79 | 
| 81 82 83 84 85 86 87 88 89 | 
| 91 92 93 94 95 96 97 98 99 | 





REM 8.
DROP TABLE EMP_TEST;

CREATE TABLE EMP_TEST AS
SELECT *
FROM EMPLOYEES
WHERE Department_ID IN (20, 30, 60) ;

SELECT * FROM EMP_TEST ;

DECLARE
    emp_id       EMPLOYEES.EMPLOYEE_ID%TYPE;
    emp_salary   EMPLOYEES.SALARY%TYPE ;
    num_rows     NUMBER;
    
    CURSOR sal_raise IS 
        SELECT EMPLOYEE_ID, SALARY 
        FROM EMP_TEST
        WHERE Department_ID = 30;
        
BEGIN 
    OPEN sal_raise;
    LOOP
        FETCH sal_raise INTO emp_id, emp_salary;
        EXIT WHEN sal_raise%NOTFOUND;
         
        -- DBMS_OUTPUT.PUT_LINE(' ');
        -- DBMS_OUTPUT.PUT_LINE ('ORIGINAL - Employee ID : ' || emp_id || ' has a salary  = ' || emp_salary || '.' );  
        
        IF emp_salary <= 3000 
        THEN emp_salary := emp_salary/100 * 110;
        END IF;
        
        DBMS_OUTPUT.PUT_LINE ('Updated Salary for Employee ID: ' || emp_id || ' has a salary = ' || emp_salary || '.' );  
        -- DBMS_OUTPUT.PUT_LINE ('row: ' || sal_raise%ROWCOUNT );
    END LOOP;
        num_rows := sal_raise%ROWCOUNT;
    CLOSE sal_raise;

    DBMS_OUTPUT.PUT_LINE(num_rows || ' Rows were affected.');
    DBMS_OUTPUT.PUT_LINE(' ');

    DELETE 
    FROM EMP_TEST
    WHERE Department_ID = 20;
        
    DBMS_OUTPUT.PUT_LINE('Number of Employees deleted where Deparament ID = 20 : ' || TO_CHAR(SQL%ROWCOUNT) );
    

END; 
/

[output]

Updated Salary for Employee ID: 114 has a salary = 11000.
Updated Salary for Employee ID: 115 has a salary = 3100.
Updated Salary for Employee ID: 116 has a salary = 3190.
Updated Salary for Employee ID: 117 has a salary = 3080.
Updated Salary for Employee ID: 118 has a salary = 2860.
Updated Salary for Employee ID: 119 has a salary = 2750.
6 Rows were affected.
 
Number of Employees deleted where Deparament ID = 20 : 2




REM 9.

DECLARE
    
    dept_employees      EMPLOYEES%ROWTYPE;
    
    CURSOR dept_30 IS
        SELECT *
        FROM EMPLOYEES
        WHERE Department_ID = 30;
        
BEGIN
    DBMS_OUTPUT.PUT_LINE (' Employee ID     Employee Name      Employee Salary');
    DBMS_OUTPUT.PUT_LINE ('----------------------------------------------------');   
    
    OPEN dept_30;
    LOOP
        FETCH dept_30 INTO dept_employees;
        EXIT WHEN dept_30 %NOTFOUND;
        DBMS_OUTPUT.PUT_LINE ( RPAD(dept_employees.employee_id, 14 ) || RPAD(dept_employees.first_name || ' '|| dept_employees.last_name, 25) || to_char(dept_employees.salary, '$99,999.00')   );
    END LOOP;
    CLOSE dept_30;
END;
/

[output]

Employee ID     Employee Name      Employee Salary
----------------------------------------------------
114           Den Raphaely              $11,000.00
115           Alexander Khoo             $3,100.00
116           Shelli Baida               $2,900.00
117           Sigal Tobias               $2,800.00
118           Guy Himuro                 $2,600.00
119           Karen Colmenares           $2,500.00

